stages:
  - build
  - test
  - publish

################################################################################

build-dist:
  stage: build
  image: python:3.11-slim-bullseye
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist

################################################################################

.build-docker:
  stage: build
  image: docker
  services: ['docker:dind']
  variables:
    DOCKER_BUILDKIT: 1
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script: |
    echo -e "###############################\nPushing image for context..."
    cp Dockerfile.$VARIANT.dockerignore .dockerignore
    echo -e 'FROM docker\nWORKDIR /W\nADD * .' | docker build . --file - --tag context
    CONTEXT=$(docker run --rm context sh -c 'ls | sort | xargs tar c create --to-stdout | md5sum | cut -d" " -f1')
    docker pull $CI_REGISTRY_IMAGE/cache/$VARIANT:by-context-$CONTEXT || true
    if $(docker images --format "{{.Repository}}:{{.Tag}}" | grep $CI_REGISTRY_IMAGE/cache/$VARIANT:by-context-$CONTEXT)
    then
      echo -e "###############################\nPushing image for context..."
      docker tag $CI_REGISTRY_IMAGE/cache/$VARIANT:by-context-$CONTEXT $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA
      docker push $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA
    else
      for STAGE in $(cat Dockerfile.$VARIANT | grep -E 'FROM \S+ AS \S+' | cut -d' ' -f4)
      do
        echo -e "###############################\nPulling image for stage $STAGE..."
        docker pull $CI_REGISTRY_IMAGE/cache/$VARIANT:by-branch-master-stage-$STAGE || true
        docker pull $CI_REGISTRY_IMAGE/cache/$VARIANT:by-branch-$CI_COMMIT_REF_NAME-stage-$STAGE || true
        docker pull $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA-stage-$STAGE || true
        docker pull $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_BEFORE_SHA-stage-$STAGE || true
  
        echo -e "###############################\nBuilding image for stage $STAGE..."
        docker build . \
          --file Dockerfile.$VARIANT \
          --target $STAGE \
          --cache-from $CI_REGISTRY_IMAGE/cache/$VARIANT:by-branch-master-stage-$STAGE \
          --cache-from $CI_REGISTRY_IMAGE/cache/$VARIANT:by-branch-$CI_COMMIT_REF_NAME-stage-$STAGE \
          --cache-from $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA-stage-$STAGE \
          --cache-from $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_BEFORE_SHA-stage-$STAGE \
          --tag $CI_REGISTRY_IMAGE/cache/$VARIANT:by-branch-$CI_COMMIT_REF_NAME-stage-$STAGE \
          --tag $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA-stage-$STAGE
  
        echo -e "###############################\nPushing image for stage $STAGE..."
        docker push $CI_REGISTRY_IMAGE/cache/$VARIANT:by-branch-$CI_COMMIT_REF_NAME-stage-$STAGE
        docker push $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA-stage-$STAGE
      done
      echo -e "###############################\nPushing image for commit..."
      docker tag $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA-stage-final $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA
      docker tag $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA-stage-final $CI_REGISTRY_IMAGE/cache/$VARIANT:by-context-$CONTEXT
      docker push $CI_REGISTRY_IMAGE/cache/$VARIANT:by-commit-$CI_COMMIT_SHA
      docker push $CI_REGISTRY_IMAGE/cache/$VARIANT:by-context-$CONTEXT
    fi

build-tester:
  extends: .build-docker
  variables:
    VARIANT: tester

build-release:
  extends: .build-docker
  variables:
    VARIANT: release

################################################################################

test-pip:
  stage: test
  needs: [build-tester, build-dist]
  image: $CI_REGISTRY_IMAGE/cache/tester:by-commit-$CI_COMMIT_SHA
  services: ['docker:dind']
  variables:
    GIT_STRATEGY: fetch
  before_script:
    - pip install dist/*.tar.gz
    - rm dist/*.tar.gz
  script:
    - git checkout -- Makefile tests
    - make tests
  coverage: '/TOTAL .+ (\d+\.\d+)%/'

test-src:
  stage: test
  needs: [build-tester]
  image: $CI_REGISTRY_IMAGE/cache/tester:by-commit-$CI_COMMIT_SHA
  services: ['docker:dind']
  script:
    - make tests

################################################################################

include: .gitlab-ci-post.yml