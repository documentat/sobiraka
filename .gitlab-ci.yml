stages:
  - build
  - test
  - publish

################################################################################

build-dist:
  stage: build
  image: python:3.11-slim-bullseye
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist

################################################################################

.build-docker:
  stage: build
  image: docker
  services: ['docker:dind']
  variables:
    DOCKER_BUILDKIT: 1
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script: |
    cp Dockerfile.$IMAGE.dockerignore .dockerignore
    CONTEXT=$(echo -e 'FROM scratch\nADD * .' | docker build . --file - 2>&1 | grep 'writing image' | cut -d: -f2 | cut -d' ' -f1)
    docker pull $CI_REGISTRY_IMAGE/cache-$IMAGE/by-context:$CONTEXT || true
    docker build . \
      --file Dockerfile.$IMAGE \
      --tag $CI_REGISTRY_IMAGE/cache-$IMAGE/by-context:$CONTEXT \
      --tag $CI_REGISTRY_IMAGE/cache-$IMAGE/by-commit:$CI_COMMIT_SHA
    docker push $CI_REGISTRY_IMAGE/cache-$IMAGE/by-context:$CONTEXT
    docker push $CI_REGISTRY_IMAGE/cache-$IMAGE/by-commit:$CI_COMMIT_SHA

build-tester:
  extends: .build-docker
  variables:
    IMAGE: tester

build-release:
  extends: .build-docker
  variables:
    IMAGE: release

################################################################################

test-pip:
  stage: test
  needs: [build-tester, build-dist]
  image: $CI_REGISTRY_IMAGE/cache-tester/by-commit:$CI_COMMIT_SHA
  services: ['docker:dind']
  variables:
    GIT_STRATEGY: fetch
  before_script:
    - pip install dist/*.tar.gz
    - rm dist/*.tar.gz
  script:
    - git checkout -- Makefile tests
    - make tests
  coverage: '/TOTAL .+ (\d+\.\d+)%/'

test-src:
  stage: test
  needs: [build-tester]
  image: $CI_REGISTRY_IMAGE/cache-tester/by-commit:$CI_COMMIT_SHA
  services: ['docker:dind']
  script:
    - make tests

################################################################################

include: .gitlab-ci-post.yml