stages:
  - prepare
  - build
  - test
  - publish

################################################################################

md5sum:
  stage: prepare
  image: docker
  script:
    - echo >> .dockerignore
    - echo '!Dockerfile' >> .dockerignore
    - echo '!.dockerignore' >> .dockerignore
    - echo '!.gitlab-ci.yml' >> .dockerignore
    - echo -e 'FROM docker\nWORKDIR /W\nADD . .' | docker build . --file - --tag context
    - docker run --rm context sh -c 'ls -lAh'
    - docker run --rm context sh -c 'ls | sort | xargs tar c --to-stdout | md5sum | cut -d" " -f1' > context_hash.txt
    - cat context_hash.txt
  artifacts:
    paths:
      - context_hash.txt

################################################################################

build-dist:
  stage: build
  needs: []
  image: python:3.11-slim-bullseye
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist

################################################################################

.build-docker:
  stage: build
  image: docker
  services: ['docker:dind']
  variables:
    DOCKER_BUILDKIT: 1
    BUILD_ARG: foo=bar
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script: |
    CONTEXT=`cat context_hash.txt`
    docker pull $CI_REGISTRY_IMAGE/cache/$IMAGE:by-context-$CONTEXT || true
    if docker images --format "{{.Repository}}:{{.Tag}}" | grep $CI_REGISTRY_IMAGE/cache/$IMAGE:by-context-$CONTEXT
    then
        docker tag $CI_REGISTRY_IMAGE/cache/$IMAGE:by-context-$CONTEXT $CI_REGISTRY_IMAGE/cache/$IMAGE:by-commit-$CI_COMMIT_SHA
        docker push $CI_REGISTRY_IMAGE/cache/$IMAGE:by-commit-$CI_COMMIT_SHA
    else
        docker build . \
          --target $TARGET \
          --build-arg $BUILD_ARG \
          --tag $CI_REGISTRY_IMAGE/cache/$IMAGE:by-context-$CONTEXT \
          --tag $CI_REGISTRY_IMAGE/cache/$IMAGE:by-commit-$CI_COMMIT_SHA
        docker push $CI_REGISTRY_IMAGE/cache/$IMAGE:by-context-$CONTEXT
        docker push $CI_REGISTRY_IMAGE/cache/$IMAGE:by-commit-$CI_COMMIT_SHA
    fi

build-tester-python3.12:
  extends: .build-docker
  variables:
    TARGET: tester
    IMAGE: tester-python3.12

build-tester-python3.11:
  extends: .build-docker
  variables:
    TARGET: tester
    IMAGE: tester-python3.11
    BUILD_ARG: PYTHON_VERSION=3.11

build-release-html:
  extends: .build-docker
  variables:
    TARGET: release-html
    IMAGE: release-html

build-release:
  extends: .build-docker
  variables:
    TARGET: release
    IMAGE: release

build-linter:
  extends: .build-docker
  variables:
    TARGET: linter
    IMAGE: linter

################################################################################

.test:
  stage: test
  image: $CI_REGISTRY_IMAGE/cache/$IMAGE:by-commit-$CI_COMMIT_SHA
  services: ['docker:dind']
  variables:
    GIT_STRATEGY: fetch
  before_script:
    - python --version
    - git config --global --add safe.directory $PWD
  script:
    - git checkout -- Makefile tests
    - make tests

test-python3.12:
  extends: .test
  needs: [build-tester-python3.12]
  variables:
    TARGET: tester
    IMAGE: tester-python3.12
  coverage: '/TOTAL .+ (\d+\.\d+)%/'

test-python3.11:
  extends: .test
  needs: [build-tester-python3.11]
  variables:
    TARGET: tester
    IMAGE: tester-python3.11

lint:
  extends: .test
  needs: [build-linter]
  variables:
    TARGET: linter
    IMAGE: linter
  script:
    - make lint

docs-html:
  stage: test
  needs: [build-release-html]
  image: $CI_REGISTRY_IMAGE/cache/release-html:by-commit-$CI_COMMIT_SHA
  script:
    - ls -A | grep -v docs | xargs rm -rf
    - sobiraka --no-cache html docs/docs.yaml --output html
  artifacts:
    paths:
      - html

docs-pdf:
  stage: test
  needs: [build-release-html]
  image: $CI_REGISTRY_IMAGE/cache/release-html:by-commit-$CI_COMMIT_SHA
  script:
    - ls -A | grep -v docs | xargs rm -rf
    - sobiraka --no-cache weasy docs/docs.yaml --output sobiraka.pdf
  artifacts:
    paths:
      - sobiraka.pdf

################################################################################

include: .gitlab-ci-post.yml
