stages:
  - build
  - test

build-tester:
  stage: build
  image: docker
  services: ['docker:dind']
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:master || true
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME || true
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA || true
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA || true
    - >
      docker build .
      --file Dockerfile.ci
      --cache-from $CI_REGISTRY_IMAGE:master
      --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
      --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_BEFORE_SHA
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      --tag tester
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker save tester | gzip > tester.tar.gz
  artifacts:
    paths:
      - tester.tar.gz

build-dist:
  stage: build
  image: python:3.11-alpine
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist

test:
  stage: test
  image: docker:20.10.16
  services: ['docker:dind']
  before_script:
    - docker load < tester.tar.gz
    - docker run --detach --name tester -v $PWD:/PRJ tester cat /dev/zero
    - docker exec tester pip install dist/*.tar.gz
    - ls -A | grep -v -E 'Makefile|tests' | xargs -r -I% rm -rf %
  script:
    - docker exec tester make tests
  coverage: '/TOTAL .+ (\d+\.\d+)%/'