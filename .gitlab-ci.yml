stages:
  - manual
  - build
  - test

################################################################################

build-ci-env:
  stage: manual
  when: manual
  image: docker
  services: ['docker:dind']
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker run -it --detach --name ci-env docker
    - docker exec ci-env apk add git make pigz py3-pip
    - docker commit ci-env $CI_REGISTRY_IMAGE/ci-env
    - docker push $CI_REGISTRY_IMAGE/ci-env


################################################################################

build-dist:
  stage: build
  image: python:3.11-slim-bullseye
  script:
    - python setup.py sdist
  artifacts:
    paths:
      - dist

################################################################################

.build-docker:
  stage: build
  image: $CI_REGISTRY_IMAGE/ci-env
  services: ['docker:dind']
  variables:
    DOCKER_BUILDKIT: 1
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - >
      for STAGE in $(cat Dockerfile.$IMAGE | grep -P 'FROM \S+ AS \S+' | cut -d' ' -f4);
      do
        docker pull $CI_REGISTRY_IMAGE/$IMAGE-buildcache:master || true;
        docker pull $CI_REGISTRY_IMAGE/$IMAGE-buildcache/master-$STAGE || true;
        docker pull $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_REF_NAME-$STAGE || true;
        docker pull $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_SHA-$STAGE || true;
        docker pull $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_BEFORE_SHA-$STAGE || true;

        docker build . --file Dockerfile.$IMAGE --target $STAGE --tag result;

        docker tag result $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_REF_NAME;
        docker push $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_REF_NAME;

        docker tag result $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_SHA;
        docker push $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_SHA;

        docker tag result $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_BEFORE_SHA;
        docker push $CI_REGISTRY_IMAGE/$IMAGE-buildcache/$CI_COMMIT_BEFORE_SHA;

        docker save result | pigz > $IMAGE.tar.gz;
      done
  artifacts:
    paths:
      - $IMAGE.tar.gz

build-tester:
  extends: .build-docker
  variables:
    IMAGE: tester

build-release:
  extends: .build-docker
  variables:
    IMAGE: release
  after_script:
    - docker tag result $CI_REGISTRY_IMAGE/$IMAGE
    - docker push $CI_REGISTRY_IMAGE/$IMAGE:$CI_COMMIT_SHA

################################################################################

test-pip:
  stage: test
  needs: [build-tester, build-dist]
  image: $CI_REGISTRY_IMAGE/ci-env
  variables:
    GIT_STRATEGY: fetch
  services: ['docker:dind']
  before_script:
    - docker load < tester.tar.gz
    - rm tester.tar.gz
    - docker run --detach --rm --name tester -v $PWD:/PRJ --entrypoint dd tester if=/dev/zero of=/dev/null
    - docker exec tester pip install dist/*.tar.gz
    - rm dist/*.tar.gz
  script:
    - git checkout -- Makefile tests
    - docker exec tester make tests
  coverage: '/TOTAL .+ (\d+\.\d+)%/'